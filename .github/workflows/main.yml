name: release

on:
  push:
    branches:
      - prerelease
      - release

jobs:
  linux:
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64
    strategy:
      matrix:
        python-version: [[37, "3.7"], [38, "3.8"], [39, "3.9"], [310, "3.10"]]
    steps:
      - uses: actions/checkout@v2

      - name: Set python version
        run: |
          if [[ "${{ matrix.python-version[0] }}" == "37" ]]; then
            echo "/opt/python/cp37-cp37m/bin" >> $GITHUB_PATH
          else
            echo "/opt/python/cp${{ matrix.python-version[0] }}-cp${{ matrix.python-version[0] }}/bin" >> $GITHUB_PATH
          fi
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.65.0
          components: rustfmt
          target: aarch64-unknown-linux-gnu
          default: true

      - uses: extractions/setup-just@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: Gr1N/setup-poetry@v7

      - name: Install tools
        run: |
          yum install -y mysql-devel postgresql-devel freetds-devel
      - name: Setup project
        run: |
          just bootstrap-python
      - uses: messense/maturin-action@v1
        with:
          rust-toolchain: 1.65.0
          maturin-version: v0.12.1
          command: build
          args: -m connectorx-python/Cargo.toml -i python --no-sdist --release --manylinux 2014
        env:
          SQLITE3_STATIC: 1

      - name: Copy j4rs dependencies into dist
        run: |
          cp -rf connectorx-python/target/release/jassets connectorx-python/connectorx/dependencies
      # rebuild the wheel to incorporate j4rs dependencies
      - uses: messense/maturin-action@v1
        with:
          rust-toolchain: 1.65.0
          maturin-version: v0.12.1
          command: build
          args: -m connectorx-python/Cargo.toml -i python --no-sdist --release --manylinux 2014
        env:
          SQLITE3_STATIC: 1

      # - uses: messense/maturin-action@v1
      #   with:
      #     maturin-version: v0.12.1
      #     command: build
      #     args: -m connectorx-python/Cargo.toml --target aarch64-unknown-linux-gnu -i python --no-sdist --release --manylinux 2014
      #   env:
      #     SQLITE3_STATIC: 1

      - uses: actions/upload-artifact@v3
        with:
          name: "ubuntu-latest-${{ matrix.python-version[1] }}"
          path: connectorx-python/target/wheels/*.whl

  win-and-mac:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["windows-latest", "macos-10.15"]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v2

      - uses: ankane/setup-mysql@v1
        with:
          mysql-version: 8

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.65.0
          components: rustfmt
          default: true

      - uses: extractions/setup-just@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: Gr1N/setup-poetry@v7

      - name: Setup project
        run: |
          just bootstrap-python
      - uses: messense/maturin-action@v1
        with:
          rust-toolchain: 1.65.0
          maturin-version: v0.12.1
          command: build
          args: -m connectorx-python/Cargo.toml -i python --no-sdist --release
        env:
          SQLITE3_STATIC: 1

      - name: Copy j4rs dependencies into dist
        run: |
          cp -r connectorx-python/target/release/jassets connectorx-python/connectorx/dependencies
      # rebuild the wheel to incorporate j4rs dependencies
      - uses: messense/maturin-action@v1
        with:
          rust-toolchain: 1.65.0
          maturin-version: v0.12.1
          command: build
          args: -m connectorx-python/Cargo.toml -i python --no-sdist --release
        env:
          SQLITE3_STATIC: 1

      - uses: actions/upload-artifact@v2
        with:
          name: "${{ matrix.os }}-${{ matrix.python-version }}"
          path: connectorx-python/target/wheels/*.whl

  apple-arm:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v2

      - uses: ankane/setup-mysql@v1
        with:
          mysql-version: 8

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.65.0
          components: rustfmt
          target: aarch64-apple-darwin
          default: true

      - uses: extractions/setup-just@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: Gr1N/setup-poetry@v7

      - name: Setup project
        run: |
          just bootstrap-python
      - uses: messense/maturin-action@v1
        with:
          rust-toolchain: 1.65.0
          maturin-version: v0.12.1
          command: build
          args: -m connectorx-python/Cargo.toml --target aarch64-apple-darwin -i python --no-sdist --release
        env:
          SQLITE3_STATIC: 1

      - name: Copy j4rs dependencies into dist
        run: |
          cp -rf connectorx-python/target/aarch64-apple-darwin/release/jassets connectorx-python/connectorx/dependencies
      # rebuild the wheel to incorporate j4rs dependencies
      - uses: messense/maturin-action@v1
        with:
          rust-toolchain: 1.65.0
          maturin-version: v0.12.1
          command: build
          args: -m connectorx-python/Cargo.toml --target aarch64-apple-darwin -i python --no-sdist --release
        env:
          SQLITE3_STATIC: 1

      - uses: actions/upload-artifact@v2
        with:
          name: "macos-${{ matrix.python-version }}"
          path: connectorx-python/target/wheels/*.whl

  verify:
    runs-on: ${{ matrix.os }}
    needs: [win-and-mac, linux, apple-arm]
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        os: [macos-10.15, ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - uses: actions/download-artifact@v3
        with:
          name: "${{ matrix.os }}-${{ matrix.python-version }}"

      - run: |
          pip install *.whl
          python -c "import connectorx"
  upload:
    runs-on: ubuntu-latest
    needs: [verify]
    steps:
      
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3

        with:
          name: dist-without-markdown
          path: |
            **/*
